digraph "Eigen::internal::noncopyable"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="Eigen::internal::noncopyable",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node1 -> Node2 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="Eigen::CholmodBase\l\< _MatrixType, _UpLo,\l CholmodDecomposition\l\< _MatrixType, _UpLo \> \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEigen_1_1CholmodBase.html"];
  Node2 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="Eigen::CholmodDecomposition\l\< _MatrixType, _UpLo \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEigen_1_1CholmodDecomposition.html",tooltip="A general Cholesky factorization and solver based on Cholmod. "];
  Node1 -> Node4 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="Eigen::CholmodBase\l\< _MatrixType, _UpLo,\l CholmodSimplicialLDLT\l\< _MatrixType, _UpLo \> \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEigen_1_1CholmodBase.html"];
  Node4 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="Eigen::CholmodSimplicial\lLDLT\< _MatrixType, _UpLo \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEigen_1_1CholmodSimplicialLDLT.html",tooltip="A simplicial direct Cholesky (LDLT) factorization and solver based on Cholmod. "];
  Node1 -> Node6 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="Eigen::CholmodBase\l\< _MatrixType, _UpLo,\l CholmodSimplicialLLT\l\< _MatrixType, _UpLo \> \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEigen_1_1CholmodBase.html"];
  Node6 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="Eigen::CholmodSimplicial\lLLT\< _MatrixType, _UpLo \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEigen_1_1CholmodSimplicialLLT.html",tooltip="A simplicial direct Cholesky (LLT) factorization and solver based on Cholmod. "];
  Node1 -> Node8 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="Eigen::CholmodBase\l\< _MatrixType, _UpLo,\l CholmodSupernodalLLT\l\< _MatrixType, _UpLo \> \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEigen_1_1CholmodBase.html"];
  Node8 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="Eigen::CholmodSupernodal\lLLT\< _MatrixType, _UpLo \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEigen_1_1CholmodSupernodalLLT.html",tooltip="A supernodal Cholesky (LLT) factorization and solver based on Cholmod. "];
  Node1 -> Node10 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="Eigen::CholmodBase\l\< _MatrixType, _UpLo,\l Derived \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEigen_1_1CholmodBase.html",tooltip="The base class for the direct Cholesky factorization of Cholmod. "];
  Node1 -> Node11 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="Eigen::IncompleteLUT\l\< _Scalar \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEigen_1_1IncompleteLUT.html",tooltip="Incomplete LU factorization with dual-threshold strategy During the numerical factorization, two dropping rules are used : 1) any element whose magnitude is less than some tolerance is dropped. This tolerance is obtained by multiplying the input tolerance droptol by the average magnitude of all the original elements in the current row. 2) After the elimination of the row, only the fill largest elements in the L part and the fill largest elements in the U part are kept (in addition to the diagonal element ). Note that fill is computed from the input parameter fillfactor which is used the ratio to control the fill_in relatively to the initial number of nonzero elements. "];
  Node1 -> Node12 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="Eigen::IterativeSolverBase\l\< Derived \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEigen_1_1IterativeSolverBase.html",tooltip="Base class for linear iterative solvers. "];
  Node1 -> Node13 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="Eigen::PastixBase\<\l Derived \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEigen_1_1PastixBase.html"];
  Node1 -> Node14 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="Eigen::SimplicialCholesky\lBase\< Derived \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEigen_1_1SimplicialCholeskyBase.html",tooltip="A direct sparse Cholesky factorizations. "];
  Node1 -> Node15 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="Eigen::SuperLUBase\l\< _MatrixType, Derived \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEigen_1_1SuperLUBase.html",tooltip="The base class for the direct and incomplete LU factorization of SuperLU. "];
  Node1 -> Node16 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="Eigen::UmfPackLU\< \l_MatrixType \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEigen_1_1UmfPackLU.html",tooltip="A sparse LU factorization and solver based on UmfPack. "];
  Node1 -> Node17 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="Eigen::IncompleteLUT\l\< _MatrixType \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEigen_1_1IncompleteLUT.html"];
  Node1 -> Node18 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="Eigen::IterativeSolverBase\l\< BiCGSTAB\< _MatrixType,\l _Preconditioner \> \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEigen_1_1IterativeSolverBase.html"];
  Node18 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="Eigen::BiCGSTAB\< _Matrix\lType, _Preconditioner \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEigen_1_1BiCGSTAB.html",tooltip="A bi conjugate gradient stabilized solver for sparse square problems. "];
  Node1 -> Node20 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="Eigen::IterativeSolverBase\l\< ConjugateGradient\< _MatrixType,\l _UpLo, _Preconditioner \> \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEigen_1_1IterativeSolverBase.html"];
  Node20 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="Eigen::ConjugateGradient\l\< _MatrixType, _UpLo, \l_Preconditioner \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEigen_1_1ConjugateGradient.html",tooltip="A conjugate gradient solver for sparse self-adjoint problems. "];
  Node1 -> Node22 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="Eigen::PastixBase\<\l _MatrixType \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEigen_1_1PastixBase.html"];
  Node1 -> Node23 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="Eigen::PastixBase\<\l PastixLDLT\< _MatrixType,\l _UpLo \> \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEigen_1_1PastixBase.html"];
  Node23 -> Node24 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="Eigen::PastixLDLT\<\l _MatrixType, Options \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEigen_1_1PastixLDLT.html",tooltip="A sparse direct supernodal Cholesky (LLT) factorization and solver based on the PaStiX library..."];
  Node1 -> Node25 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="Eigen::PastixBase\<\l PastixLLT\< _MatrixType,\l _UpLo \> \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEigen_1_1PastixBase.html"];
  Node25 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="Eigen::PastixLLT\< \l_MatrixType, Options \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEigen_1_1PastixLLT.html",tooltip="A sparse direct supernodal Cholesky (LLT) factorization and solver based on the PaStiX library..."];
  Node1 -> Node27 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node27 [label="Eigen::PastixBase\<\l PastixLU\< _MatrixType \> \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEigen_1_1PastixBase.html"];
  Node27 -> Node28 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 [label="Eigen::PastixLU\< _Matrix\lType, IsStrSym \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEigen_1_1PastixLU.html",tooltip="Interface to the PaStix solver. "];
  Node1 -> Node29 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 [label="Eigen::SimplicialCholesky\lBase\< SimplicialCholesky\l\< _MatrixType, _UpLo \> \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEigen_1_1SimplicialCholeskyBase.html"];
  Node29 -> Node30 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 [label="Eigen::SimplicialCholesky\l\< _MatrixType, _UpLo \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEigen_1_1SimplicialCholesky.html"];
  Node1 -> Node31 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node31 [label="Eigen::SimplicialCholesky\lBase\< SimplicialLDLT\< \l_MatrixType, _UpLo \> \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEigen_1_1SimplicialCholeskyBase.html"];
  Node31 -> Node32 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node32 [label="Eigen::SimplicialLDLT\l\< _MatrixType, _UpLo \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEigen_1_1SimplicialLDLT.html",tooltip="A direct sparse LDLT Cholesky factorizations without square root. "];
  Node1 -> Node33 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node33 [label="Eigen::SimplicialCholesky\lBase\< SimplicialLLT\< _MatrixType,\l _UpLo \> \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEigen_1_1SimplicialCholeskyBase.html"];
  Node33 -> Node34 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node34 [label="Eigen::SimplicialLLT\l\< _MatrixType, _UpLo \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEigen_1_1SimplicialLLT.html",tooltip="A direct sparse LLT Cholesky factorizations. "];
  Node1 -> Node35 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node35 [label="Eigen::SuperLUBase\l\< _MatrixType, SuperLU\l\< _MatrixType \> \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEigen_1_1SuperLUBase.html"];
  Node35 -> Node36 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node36 [label="Eigen::SuperLU\< _MatrixType \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEigen_1_1SuperLU.html",tooltip="A sparse direct LU factorization and solver based on the SuperLU library. "];
}
